<h1>Create an Invite</h1>

<%= render 'invitesForm' %>

<style type="text/css">
    .marker {
      /* Including CSS here for now */
      background-image: url(<%= @profile.avatar.url(:thumb) %>);
      background-size: cover;
      background-repeat:  no-repeat;
      background-position: center;
      width: 55px;
      height:  55px;
      border-radius: 50%;
      border:  5px solid #aaa;
      position: relative;
    }

    .marker::after {
      content:  "";
      width: 0; 
      height: 0; 
      position: absolute;
      bottom:  -18px;
      z-index:  -1;
      left:  calc(50% - 20px);
      border-left: 20px solid transparent;
      border-right: 20px solid transparent;
      border-top: 20px solid #aaa;
    }
</style>

<div id="map" style="height: 400px;"></div>
<script>
  function initMap() {

    function initialize() {

      // Try HTML5 geolocation.
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function(position) {

          var pos = {
            lat: position.coords.latitude,
            lng: position.coords.longitude
          };
          console.log(pos);

          // Pass location to hidden fields
          var set_location = function() {
            $('.user_latitude').val(pos.lat);
            $('.user_longitude').val(pos.lng);
          };

          var myLatlng = new google.maps.LatLng(pos.lat, pos.lng);

          var mapOptions = {
            center: myLatlng,
            zoom: 16,
            scrollwheel: false,
            draggable: false
          }

          var map = new google.maps.Map(document.getElementById('map'), mapOptions);

          overlay = new CustomMarker(
            myLatlng, 
            map,
            {
              marker_id: '123'
            }
          );

          // Start Boundary experiment
          // *************************
          // Set bounds for Trinity Bellwoods park
          // var strictBounds = new google.maps.LatLngBounds(
          //  new google.maps.LatLng(43.644253, -79.418262), 
          //  new google.maps.LatLng(43.651266, -79.411527)
          // );

          // // Check to see if user in within set boundary
          // if (strictBounds.contains(map.getCenter())) {
          //   console.log("You are in Bellwoods");
            set_location(); // Keep this function call if you remove experiment code above!!
          // } else {
          //   console.log("You are NOT in bellwoods");
          //   // Remove form, so user cannot submit an invite. This is a temporary solution.
          //   $("#new_invite").remove();
          //   // Find a better way to replace map with useful info.
          //   $("#map").html("<p>Sorry, Looks like you are not in bellwooods. Git to the park and try again.</p>")
          //   return;
          // }
          // End Boundary experiment
        }, function() {
          console.log("Error")
        });

      } else {
        // Browser doesn't support Geolocation
        console.log("browser doesn't support geolocation")
      }
    };

    google.maps.event.addDomListener(window, 'load', initialize);

    function CustomMarker(latlng, map, args) {
      this.latlng = latlng; 
      this.args = args; 
      this.setMap(map); 
    }

    CustomMarker.prototype = new google.maps.OverlayView();

    CustomMarker.prototype.draw = function() {
      
      var self = this;
      
      var div = this.div;
      
      if (!div) {
      
        div = this.div = document.createElement('div');
        
        div.className = 'marker';
        
        if (typeof(self.args.marker_id) !== 'undefined') {
          div.dataset.marker_id = self.args.marker_id;
        }
        
        var panes = this.getPanes();
        panes.overlayImage.appendChild(div);
      }
      
      var point = this.getProjection().fromLatLngToDivPixel(this.latlng);
      
      if (point) {
        div.style.left = (point.x - 10) + 'px';
        div.style.top = (point.y - 20) + 'px';
      }
    };

    CustomMarker.prototype.remove = function() {
      if (this.div) {
        this.div.parentNode.removeChild(this.div);
        this.div = null;
      } 
    };

    CustomMarker.prototype.getPosition = function() {
      return this.latlng; 
    };

  }
</script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCf1VWB16nqD-V2R0L1ucjcSzFHE-niH10&callback=initMap"></script>